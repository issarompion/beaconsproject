version: 2.1
orbs:
  node: circleci/node@1.1.6
executors:
  default:
    docker:
      - image: cypress/base
    working_directory: ~/beaconsproject
    environment:
      PRODUCTION: false
      PROJECT_NAME: beaconsprojet
      PROJECT_VERSION: 1.0
      GIT: https://github.com/issarompion/beaconsproject.git
      KAFKA_TOPIC_AUTH: auth
      KAFKA_TOPIC_BEACON: beacon
      KAFKA_TOPIC_CLIENT: client
      KAFKA_TOPIC_CONTENT: content
      KAFKA_TOPIC_LOGGER: logger
      KAFKA_REQUEST: req
      KAFKA_RESPONSE: res
      KAFKA_ACTION_LIST: list
      KAFKA_ACTION_READ: read
      KAFKA_ACTION_UPDATE: update
      KAFKA_ACTION_DELETE: delete
      KAFKA_ACTION_CREATE: create
      KAFKA_ACTION_LOGIN: login
      KAFKA_ACTION_LOGOUT: logout
      JWT_KEY: beaconsproject
jobs:
  build-test-back:
    executor: default
    steps:
      - checkout
      - setup_remote_docker
      - run: set > ".env"
      - run: npm install
      - run:
          name: Install Docker client
          command: |
            set -x
            if [ ! -f docker-17.03.0-ce.tgz ]; then
              curl -sLO https://download.docker.com/linux/static/stable/x86_64/docker-17.03.0-ce.tgz
            fi
            tar -xz -C /tmp -f docker-17.03.0-ce.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: build-back
          command: |
            docker build -f ./images/auth.Dockerfile --tag $DOCKERHUB_USERNAME/auth:$PROJECT_VERSION --build-arg GIT=$GIT .
            docker build -f ./images/client.Dockerfile --tag $DOCKERHUB_USERNAME/client:$PROJECT_VERSION --build-arg GIT=$GIT .
            docker build -f ./images/beacon.Dockerfile --tag $DOCKERHUB_USERNAME/beacon:$PROJECT_VERSION --build-arg GIT=$GIT .
            docker build -f ./images/content.Dockerfile --tag $DOCKERHUB_USERNAME/content:$PROJECT_VERSION --build-arg GIT=$GIT .
            docker build -f ./images/logger.Dockerfile --tag $DOCKERHUB_USERNAME/logger:$PROJECT_VERSION --build-arg GIT=$GIT .
            docker build -f ./images/webserver.Dockerfile --tag $DOCKERHUB_USERNAME/webserver:$PROJECT_VERSION --build-arg GIT=$GIT --build-arg API_PORT=$API_PORT .

      - run:
          name: start-back
          command: |
            docker run -d --name auth $DOCKERHUB_USERNAME/auth:$PROJECT_VERSION
            docker run -d --name client $DOCKERHUB_USERNAME/client:$PROJECT_VERSION
            docker run -d --name beacon $DOCKERHUB_USERNAME/beacon:$PROJECT_VERSION
            docker run -d --name content $DOCKERHUB_USERNAME/content:$PROJECT_VERSION
            docker run -d --name logger $DOCKERHUB_USERNAME/logger:$PROJECT_VERSION
            docker run -d --name webserver -p $API_PORT:$API_PORT $DOCKERHUB_USERNAME/webserver:$PROJECT_VERSION
      
      - run: ./node_modules/.bin/wait-on http://$API_URL:$API_PORT && npm run cy:run:back

  deploy-back:
    executor: default
    steps:
        - checkout
        - run: echo "$DOCKERHUB_PASS" && echo "$DOCKERHUB_USERNAME"

  build-test-app:
    executor: default
    steps: 
      - checkout
      - run: npm install
      - run: npm run build:app
      - run: npm run test:app

  deploy-app:
    executor: default
    steps:
      - checkout
      - run: echo "$DOCKERHUB_PASS" && echo "$DOCKERHUB_USERNAME"
  
  build-test-beaconer:
    executor: default
    steps:
      - checkout
      - run: npm install
      - run: npm run build:beaconer
      - run: npm run test:beaconer
  
  deploy-beaconer:
    executor: default
    steps:
      - checkout
      - run: echo "$DOCKERHUB_PASS" && echo "$DOCKERHUB_USERNAME"

workflows:
  version: 2
  build-test-deploy:
      jobs:

        - build-test-back

        - deploy-back:
            requires:
              - build-test-back

        - build-test-app
        - deploy-app:
            requires:
              - build-test-app

        - build-test-beaconer
        - deploy-beaconer:
            requires:
              - build-test-beaconer