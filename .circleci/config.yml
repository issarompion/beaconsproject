version: 2.1
orbs:
  node: circleci/node@1.1.6
jobs:
  build-back:
    docker:
      - image: circleci/buildpack-deps:stretch

      - image: mongo
        environment:
          MONGODB_DATABASE: beaconsproject

      - image: wurstmeister/zookeeper
      - image: wurstmeister/kafka
        environment:
          KAFKA_ADVERTISED_HOST_NAME: localhost
          KAFKA_ADVERTISED_PORT: 9092
          KAFKA_PORT: 9092
          KAFKA_ZOOKEEPER_CONNECT: localhost:2181
          KAFKA_CREATE_TOPICS: "auth:1:1,client:1:1,beacon:1:1,content:1:1,logger:1:1"
    steps:
      - checkout
      - setup_remote_docker
      - run: set > ".env"
      - run: cat .env
      - run: sh scripts/build_back.sh $DOCKERHUB_USERNAME $PROJECT_VERSION $GIT $API_PORT
      - run: sh scripts/run_back.sh $DOCKERHUB_USERNAME $PROJECT_VERSION $API_PORT

  test-back:
    docker:
      - image: cypress/base

    steps:
      - run: npm install
      - run: ./node_modules/.bin/wait-on http://$API_URL:$API_PORT && npm run cy:run:back

  build-test-app:
    docker:
      - image: cypress/base

    steps: 
      - checkout
      - run: npm install
      - run: npm run test:app
  
  build-test-beaconer:
    docker:
      - image: cypress/base
    
    steps:
      - checkout
      - run: npm install
      - run: npm run test:beaconer
  
  deploy-back:
    docker:
      - image: circleci/buildpack-deps:stretch
      
    steps:
      - checkout
      - run: echo "$DOCKERHUB_PASS" && echo "$DOCKERHUB_USERNAME"

workflows:
  version: 2
  build-test-deploy:
      jobs:
        - build-back
        - test-back:
            requires:
              - build
        - deploy-back:
            requires:
              - test-back

        - build-test-app

        - build-test-beaconer
        


