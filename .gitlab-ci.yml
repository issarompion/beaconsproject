variables:
  HEADER: 'Content-Type: application/JSON'
stages:
  - build
  - test
  - deploy

.build:
  before_script:
    - cd back/microservices/src
    - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
  stage: build
  tags:
    - activiot
  only:
    - master
  when: on_success

.test:
  tags:
    - activiot
  stage: test
  before_script:
    - cd back
    - npm run install:lib
    - npm install
  when: on_success

test_beacon:
  extends: .test
  script:
    - npm run test:beacon

test_client:
  extends: .test
  script:
    - npm run test:client

.deploy:
  before_script:
    - cd back/microservices/src
  stage: deploy
  tags:
    - activiot
  only:
    - master
  when: on_success

build_auth:
  extends: .build
  script:
    - cd auth
    - docker build -t activiot/logger:latest .
    - docker push activiot/logger:latest

build_beacon:
  extends: .build
  script:
    - cd beacon
    - docker build -t activiot/beacon:latest .
    - docker push activiot/beacon:latest

build_client:
  extends: .build
  script:
    - cd client
    - docker build -t activiot/client:latest .
    - docker push activiot/client:latest

build_webserver:
  extends: .build
  script:
    - cd webserver
    - docker build -t activiot/webserver:latest .
    - docker push activiot/webserver:latest

deploy_auth:
  extends: .deploy
  script:
    - docker run -d activiot/auth:latest


deploy_beacon:
  extends: .deploy
  script:
    - docker run -d activiot/beacon:latest

deploy_client:
  extends: .deploy
  script:
    - docker run -d activiot/client:latest


deploy_webserver:
  extends: .deploy
  script:
    - docker run -d activiot/webserver:latest
